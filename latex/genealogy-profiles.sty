\RequirePackage{expl3}[2023-10-10]
\ProvidesExplPackage{genealogy-profiles}{2023/11/13}{0.1}{Macros for creating genealogical profiles}

% License: CC-BY-SA 4.0
% Author: Mikkel Eide Eriksen <mikkel.eriksen@gmail.com>

\RequirePackage{genealogytree}
\RequirePackage{hyperref}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Key setup
% 

\keys_define:nn { genealogy-profiles }
{
	name~part~order				.code:n			= {
			\seq_gset_from_clist:Nn \g__gpr_name_part_order_seq {#1}
		} ,
	name~type					.choices:nn		= {
			given~and~surname ,
			nordic~historical ,
		} {
			\int_case:nn { \l_keys_choice_int } {
				{1} { 
					\seq_gset_from_clist:Nn \g__gpr_name_part_order_seq
						{ givenname, surname }
				}
				{2} {
					\seq_gset_from_clist:Nn \g__gpr_name_part_order_seq
						{ givenname, patronymic, byname }
				}
			}
			
			
		} ,

	auto~id~prefix				.tl_set:N		= \l__gpr_id_prefix_tl ,

	% formatting profiles
	begin~profile				.tl_set:N		= \l__gpr_begin_profile_tl ,
	after~header				.tl_set:N		= \l__gpr_after_header_tl ,
	after~life~events			.tl_set:N		= \l__gpr_after_life_events_tl ,
	end~profile					.tl_set:N		= \l__gpr_end_profile_tl ,

	reference~style				.cs_set:Np		= \gpr__reference_style_handler:nn #1#2 ,
	unknown~reference~style		.cs_set:Np		= \gpr__unknown_reference_handler:nn #1#2 ,
	page~number~style			.cs_set:Np		= \gpr__page_number_handler:n #1 ,

	% name part styling
	givenname~style				.tl_set:N		= \l__gpr_givenname_style_tl ,
	patronymic~style			.tl_set:N		= \l__gpr_patronymic_style_tl ,
	surname~style				.tl_set:N		= \l__gpr_surname_style_tl ,
	byname~style				.tl_set:N		= \l__gpr_byname_style_tl ,

	header~format				.tl_set:N		= \l__gpr_header_format_tl ,
	autoheader		 			.bool_set:N 	= \l__gpr_autoheader_bool ,

	% indexes
	id~index					.tl_set:N		= \l__gpr_id_index_tl ,
	fullname~index				.tl_set:N		= \l__gpr_fullname_index_tl ,
	patronymic~index			.tl_set:N		= \l__gpr_patronymic_index_tl ,
	surname~index				.tl_set:N		= \l__gpr_surname_index_tl ,
	byname~index				.tl_set:N		= \l__gpr_byname_index_tl ,

	nest~index~entries			.bool_set:N 	= \l__gpr_nest_index_entries_bool ,
	id~in~index~entries			.bool_set:N 	= \l__gpr_id_in_index_entries_bool ,
	main~index~entry~style		.tl_set:N		= \l__gpr_main_index_entry_style_tl ,
}

\keys_define:nn { genealogy-profiles / profile }
{
	id							.tl_set:N		= \l__gpr_id_tl ,
	fullname					.tl_set:N		= \l__gpr_fullname_tl ,
	givenname					.tl_set:N		= \l__gpr_givenname_tl ,
	patronymic					.tl_set:N		= \l__gpr_patronymic_tl ,
	surname						.tl_set:N		= \l__gpr_surname_tl ,
	byname						.tl_set:N		= \l__gpr_byname_tl ,

	life~events					.tl_set:N		= \l__gpr_life_events_tl ,
}

\NewDocumentCommand { \gprKeys } { +m } {
	\keys_set:nn { genealogy-profiles } { #1 }
}

% set some defaults
\keys_set:nn { genealogy-profiles } {
	name~type = { given~and~surname } ,
	header~format = { \gprStyledName \hfill \gprID } ,
	reference~style = { \gpr_super_subscript:nn {#1} {#2} } ,
	page~number~style = { p.\nobreakspace#1 } ,
	unknown~reference~style = {\color_select:n {red} #1 \tl_if_novalue:nF {#2} {~ (#2)}} ,
}

\cs_generate_variant:Nn \gpr__unknown_reference_handler:nn {
	Vn, nV
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Errors and warnings
% 

\msg_new:nnn
{ genealogy-profiles } { reference-recorded }
{ Reference ~ recorded ~ from ~ #1 ~ to ~ #2 ~ on ~ input ~ line ~ #3 }

\msg_new:nnn
{ genealogy-profiles } { ambiguous-reference }
{ Ambiguous ~ reference: ~ #1 ~ on ~ input ~ line ~ #2, ~ use ~ IDs ~ to ~ fix ~ references }

\msg_new:nnn
{ genealogy-profiles } { unknown-reference-id }
{ Reference ~ to ~ unknown ~ id: ~ #1 }

\msg_new:nnn
{ genealogy-profiles } { unknown-reference-name }
{ Reference ~ to ~ unknown ~ name: ~ #1 }

\msg_new:nnn
{ genealogy-profiles } { missing-backref }
{ Missing ~ backreference: ~ #1 ~ refers ~ to ~ #2 ~ but ~ not ~ vice ~ versa }

\msg_new:nnnn
{ genealogy-profiles } { reused-id }
{ You ~ have ~ assigned ~ an ~ ID ~ that ~ is ~ already ~ in ~ use: ~ #1 }
{ You ~ must ~ either ~ give ~ each ~ profile ~ a ~ unique ~ ID, ~ or ~ let ~ them ~ be ~ autogenerated. }

\msg_new:nnn
{ genealogy-profiles } { ambiguous-rawname }
{ Multiple ~ profiles ~ with ~ the ~ name ~ '#1', ~ you ~ will ~ need ~ to ~ use ~ IDs ~ to ~ reference ~ them }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Extensions to expl3 library
% 

\prg_generate_conditional_variant:Nnn \tl_if_blank:n
	{ v, V } { F }

\prg_generate_conditional_variant:Nnn \property_if_recorded:nn
	{ en } { T, TF }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Properties
% 

\property_new:nnnn { floruit-years } { now } { \c_novalue_tl } {
	\seq_use:Nn \l__gpr_floruit_years_seq {,}
}

\tl_clear_new:N \l__gpr_fullname_raw_tl
\property_new:nnnn { raw-name } { now } { \c_novalue_tl } {
	\tl_use:N \l__gpr_fullname_raw_tl
}

\property_new:nnnn { names-ids } { now } { \c_novalue_tl } {
	\prop_to_keyval:N \g__gpr_name_to_id_prop
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Names
% 

\tl_const:Ne \c_gpr_underscore_tl { \char_generate:nn { `_ } { 8 } }

\cs_new_protected:Nn \gpr_name_handler:n
{
	\tl_set:Nn \l__gpr_fullname_tl {#1}
	\tl_replace_all:NVn \l__gpr_fullname_tl \c_gpr_underscore_tl { ~ }

	\seq_set_split:Nnn \l_tmpa_seq {~} {#1}
	\seq_map_indexed_inline:Nn \g__gpr_name_part_order_seq {
		\tl_set:Ne \l_tmpa_tl { \seq_item:Nn \l_tmpa_seq {##1} }
		\tl_replace_all:NVn \l_tmpa_tl \c_gpr_underscore_tl { ~ }
		\tl_if_blank:VTF \l_tmpa_tl {
			\tl_clear:c { l__gpr_##2_tl }
		} {
			\tl_set:cV { l__gpr_##2_tl } \l_tmpa_tl
		}
	}
}
\cs_generate_variant:Nn \gpr_name_handler:n {
	V, e
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% IDs
% 

\seq_clear_new:N \g__gpr_used_profile_ids_seq
\bool_new:N \l__gpr_id_exists_bool

\prop_clear_new:N \g__gpr_name_to_id_prop

\cs_new_protected:Nn \gpr_generate_unique_id:
{
	\tl_clear_new:N \l_tmpa_tl

	\tl_put_right:NV \l_tmpa_tl \l__gpr_id_prefix_tl

	% build base id from initials
	\seq_map_indexed_inline:Nn \g__gpr_name_part_order_seq {
		\tl_if_empty:cTF { l__gpr_##2_tl } {
			\tl_put_right:Ne \l_tmpa_tl { - }
		} {
			\tl_put_right:Ne \l_tmpa_tl { \tl_item:cn { l__gpr_##2_tl } {1} }
		}
	}

	% find unused variant
	\int_zero_new:N \l__gpr_id_index_int

	\bool_set_false:N \l__gpr_id_found_bool
	\bool_do_until:nn { \l__gpr_id_found_bool } {
		\int_incr:N \l__gpr_id_index_int
		\tl_set:Ne \l__gpr_id_tl {
				\tl_use:N \l_tmpa_tl
				\int_use:N \l__gpr_id_index_int
			}
		\seq_if_in:NVTF \g__gpr_used_profile_ids_seq \l__gpr_id_tl
			{
				\bool_set_false:N \l__gpr_id_found_bool
			}
			{
				% mark id as used
				\seq_gput_right:NV \g__gpr_used_profile_ids_seq \l__gpr_id_tl

				\bool_set_true:N \l__gpr_id_found_bool
			}
	}

	% check if raw name as an associated id
	\prop_get:NVNTF \g__gpr_name_to_id_prop \l__gpr_fullname_raw_tl \l_tmpb_tl
	{
		% mark raw name ambiguous if already reserved for other id
		\tl_if_eq:NNF \l__gpr_id_tl \l_tmpb_tl
		{
			\msg_note:nne { genealogy-profiles } { ambiguous-rawname }
				{ \tl_use:N \l__gpr_fullname_raw_tl }
			\prop_gput:NVn \g__gpr_name_to_id_prop \l__gpr_fullname_raw_tl
				{_AMBIGUOUS_}
		}
	}
	{
		% save raw name -> id
		\prop_gput:NVV \g__gpr_name_to_id_prop \l__gpr_fullname_raw_tl \l__gpr_id_tl
	}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% References
% 

\prop_new:N \g__gpr_references_prop

\cs_new_protected:Nn \gpr_save_reference:nn
{
	\prop_if_in:NnTF \g__gpr_references_prop { #1 } {
		\prop_get:NnN \g__gpr_references_prop { #1 } \l_tmpa_tl
	} {
		\tl_clear:N \l_tmpa_tl
	}

	% wrap ID as _ID_ so we can match them out later
	\tl_put_right:Nn \l_tmpa_tl { _#2_ }

	\prop_gput:NnV \g__gpr_references_prop { #1 } \l_tmpa_tl

%	\msg_note:nneee { genealogy-profiles } { reference-recorded } { #1 } { #2 } {\the\inputlineno}
}
\cs_generate_variant:Nn \gpr_save_reference:nn {
	Vn
}

\cs_new_protected:Nn \gpr_check_backrefs:nn
{
	\regex_extract_all:nnN { _([^_]+)_ } {#2} \l_tmpa_seq
	\seq_map_inline:Nn \l_tmpa_seq {
		% dont test entire matches (_ID_), only submatches (ID)
		\tl_if_eq:neF { _ } { \tl_item:nn { ##1 } {1} }
		{
			\seq_if_in:NnTF \g__gpr_used_profile_ids_seq { ##1 } {
				\prop_get:NnN \g__gpr_references_prop {##1} \l_tmpa_tl
				\regex_match:nVF { #1 } { \l_tmpa_tl } {
					\msg_warning:nnee { genealogy-profiles } { missing-backref }
						{#1} {##1}
				}
			} {
				\msg_warning:nne { genealogy-profiles } { unknown-reference-id } { ##1 }
			}
		}
	}
}

\cs_new:Nn \gpr_init_names_to_keys:n
{
	\tl_if_novalue:nF {#1} {
		\prop_set_from_keyval:Nn \g__gpr_name_to_id_prop {#1}
	}
}
\cs_generate_variant:Nn \gpr_init_names_to_keys:n {
	e
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Hooks
% 

\AddToHook{begindocument/end}
{
	\gpr_init_names_to_keys:e { \property_ref:nn { gpr } { names-ids } }
}

\AddToHook{shipout/lastpage}
{
	\property_record:ee { gpr } { names-ids }
	\prop_map_inline:Nn \g__gpr_references_prop {
		\gpr_check_backrefs:nn {##1} {##2}
	}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Indexing
% 

\cs_new:Nn \gpr_add_to_named_index:nnN {
	\index[#1]{
		#2
		\bool_if:nT { #3 && !\tl_if_blank_p:V \l__gpr_main_index_entry_style_tl }
			{ | \tl_use:N \l__gpr_main_index_entry_style_tl}
	}
}
\cs_generate_variant:Nn \gpr_add_to_named_index:nnN {
	VVN, VeN
}

\cs_new:Nn \gpr_build_index_entry:Nnn {
	\seq_clear:N \l_tmpa_seq
	\clist_map_inline:nn {#2} {
		\tl_if_blank:vF { l__gpr_##1_tl } {
			\seq_put_right:Nv \l_tmpa_seq { l__gpr_##1_tl }
		}
	}

	\seq_clear:N \l_tmpb_seq
	\clist_map_inline:nn {#3} {
		\tl_if_blank:vF { l__gpr_##1_tl } {
			\seq_put_right:Nv \l_tmpb_seq { l__gpr_##1_tl }
		}
	}

	\tl_set:Ne #1 {
		\seq_use:Nn \l_tmpa_seq {~}
		\bool_if:NTF \l__gpr_nest_index_entries_bool { ! } { ,~ }
		\seq_use:Nn \l_tmpb_seq {~}
		\bool_if:NT \l__gpr_id_in_index_entries_bool { ~ (\tl_use:N \l__gpr_id_tl) }
	}
}

\cs_new:Nn \gpr_add_to_indexes:nN
{
	\group_begin:
		\tl_if_blank:VF \l__gpr_id_index_tl {
			\tl_if_novalue:nF {#1} {
				\gpr_add_to_named_index:VeN \l__gpr_id_index_tl
					{ #1 ~ \tl_use:N \l__gpr_fullname_tl }
					#2
			}
		}

		\tl_if_blank:VF \l__gpr_fullname_index_tl {
			\gpr_add_to_named_index:VVN
				\l__gpr_fullname_index_tl
				{
					\tl_use:N \l__gpr_fullname_tl
					\bool_if:NT \l__gpr_id_in_index_entries_bool { ~ (\tl_use:N \l__gpr_id_tl) }
				}
				#2
		}

		\tl_if_blank:VF \l__gpr_patronymic_index_tl {
			\tl_if_blank:VF \l__gpr_patronymic_tl {
				\gpr_build_index_entry:Nnn \l_tmpa_tl
					{ patronymic, surname, byname }
					{ givenname }
			
				\gpr_add_to_named_index:VVN \l__gpr_patronymic_index_tl \l_tmpa_tl #2
			}
		}
		\tl_if_blank:VF \l__gpr_surname_index_tl {
			\tl_if_blank:VF \l__gpr_surname_tl {
				\gpr_build_index_entry:Nnn \l_tmpa_tl
					{ surname, byname }
					{ givenname, patronymic }
			
				\gpr_add_to_named_index:VVN \l__gpr_surname_index_tl \l_tmpa_tl #2
			}
		}
		\tl_if_blank:VF \l__gpr_byname_index_tl {
			\tl_if_blank:VF \l__gpr_byname_tl {
				\gpr_build_index_entry:Nnn \l_tmpa_tl
					{ byname }
					{ givenname, patronymic, surname }
			
				\gpr_add_to_named_index:VVN \l__gpr_byname_index_tl \l_tmpa_tl #2
			}
		}
	\group_end:
}
\cs_generate_variant:Nn \gpr_add_to_indexes:nN {
	VN
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Styling
% 

\cs_new_protected:Nn \gpr_style_name:N
{
	\seq_clear_new:N \l__gpr_styled_name_seq

	\seq_map_inline:Nn \g__gpr_name_part_order_seq {
		\tl_if_blank:vF { l__gpr_##1_tl } {
			\seq_put_right:Nn \l__gpr_styled_name_seq {
				\group_begin:
					\tl_use:c { l__gpr_##1_style_tl }
					\tl_use:c { l__gpr_##1_tl }
				\group_end:
			}
		}
	}

	\tl_set:Nn #1 { \seq_use:Nn \l__gpr_styled_name_seq {~} }
}

\cs_new_protected:Nn \gpr_format_floruit:N
{
	\int_compare:nNnTF { \seq_count:N \l__gpr_floruit_years_seq } = {1}
	{
		\tl_set:Ne #1 { floruit- = { \seq_item:Nn \l__gpr_floruit_years_seq {1} } }
	}
	{
		\int_zero_new:N \l__gpr_floruit_from_int
		\int_set:Nn \l__gpr_floruit_from_int { 9999 }
		\int_zero_new:N \l__gpr_floruit_to_int
		\int_set:Nn \l__gpr_floruit_to_int { 0000 }
		\seq_map_inline:Nn \l__gpr_floruit_years_seq {
			\int_set:Nn \l__gpr_floruit_from_int { \int_min:nn {##1} { \l__gpr_floruit_from_int } }
			\int_set:Nn \l__gpr_floruit_to_int { \int_max:nn {##1} { \l__gpr_floruit_to_int } }
		}
		\tl_set:Ne #1 { floruit- = { \int_use:N \l__gpr_floruit_from_int / \int_use:N \l__gpr_floruit_to_int } }
	}
}

\cs_new_protected:Nn \gpr_super_subscript:nn
{
	\group_begin:
		\hbox_set:Nn \l_tmpa_box { \textsuperscript {#1} }
		\hbox_set:Nn \l_tmpb_box { \textsubscript {#2} }
		\hbox_to_wd:nn
			{ \dim_max:nn { \box_wd:N \l_tmpa_box } { \box_wd:N \l_tmpb_box } }
			{ \hbox_overlap_right:n { \box_use:N \l_tmpa_box } \box_use:N \l_tmpb_box }
	\group_end:
}

\cs_new_protected:Nn \gpr_typeset_reference:nnnN
{
	%% TODO if no target/page?
	\hyperlink{ \property_ref:nn { gpr/#1/target } { target } } {
		\tl_if_novalue:nTF { #3 } { #2 } { #3 }
		\gpr__reference_style_handler:nn {#1} {
			\gpr__page_number_handler:n {
				\property_ref:nnn { gpr/#1/target } { page } {
					\gpr__unknown_reference_handler:nV { \bfseries ?? } \c_novalue_tl
				}
			}
			\property_ref_undefined_warn:n { gpr/#1/target }
		}
	}
	\bool_if:NT { #4 } {
		\gpr_add_to_indexes:nN { #1 } \c_false_bool
	}
	\gpr_save_reference:Vn \l__gpr_id_tl { #1 }
}
\cs_generate_variant:Nn \gpr_typeset_reference:nnnN {
	nVnN, VVnN
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% genealogytree package integration
% 

\cs_new_protected:Nn \gpr_set_genealogytree_keys:n
{
	\gtrset{ database/.cd, #1 }
}
\cs_generate_variant:Nn \gpr_set_genealogytree_keys:n {
	V
}

\prg_new_protected_conditional:Nnn \gpr_if_lifespan_defined: {T,F,TF}
{
	\bool_if:nTF {
		 ( \cs_if_exist_p:c { gtrDBbirthyear }
		|| \cs_if_exist_p:c { gtrDBbaptismyear } )
		&&
		 ( \cs_if_exist_p:c { gtrDBdeathyear }
		|| \cs_if_exist_p:c { gtrDBburialyear } )
	} {
		\prg_return_true:
	} {
		\prg_return_false:
	}
}

\gtrDeclareDatabaseFormat{gtr_db_format}{}{%
  \begin{gtrprintlist}{\par}{\unskip,\ }{\unskip.}{\unskip}%
    \gtr@list@event{birth}%
    \gtr@list@event{baptism}%
    \gpr_if_lifespan_defined:F {
    	\gtr@list@event{floruit}
    }
    \gtr@list@event{death}%
    \gtr@list@event{burial}%
  \end{gtrprintlist}%
  \gtr@print@infolist%
}
\gtrset{database~format=gtr_db_format}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% User commands
% 

\NewDocumentEnvironment { gprProfile* } { m O{} } {
	\group_begin:
		\keys_set:nn { genealogy-profiles / profile } { #1, life~events={#2} }

		\tl_if_empty:NTF \l__gpr_fullname_tl {
			% if no full name supplied, build one from given parts
			\seq_clear:N \l_tmpa_seq
			\seq_map_inline:Nn \g__gpr_name_part_order_seq {
				\tl_if_blank:vF { l__gpr_##1_tl } {
					\seq_put_right:Nv \l_tmpa_seq { l__gpr_##1_tl }
				}
			}
			\tl_set:Ne \l__gpr_fullname_tl { \seq_use:Nn \l_tmpa_seq {~} }
			\tl_set_eq:NN \l__gpr_fullname_raw_tl \l__gpr_fullname_tl
		} {
			% otherwise use full name to split into parts
			\tl_set_eq:NN \l__gpr_fullname_raw_tl \l__gpr_fullname_tl
			\gpr_name_handler:V \l__gpr_fullname_tl
		}

		% ensure unique id
		\tl_if_empty:NTF \l__gpr_id_tl {
			\gpr_generate_unique_id:
		} {
			\seq_if_in:NVT \g__gpr_used_profile_ids_seq \l__gpr_id_tl {
				\msg_error:nnee { genealogy-profiles } { reused-id } { \l__gpr_id_tl } {\the\inputlineno}
			}
			\seq_gput_right:NV \g__gpr_used_profile_ids_seq \l__gpr_id_tl
		}

		% store raw name in aux
		\property_record:ee { gpr/\tl_use:N \l__gpr_id_tl/name } { raw-name }

		% init floruit years
		\seq_clear_new:N \l__gpr_floruit_years_seq
		\property_if_recorded:enT { gpr/\tl_use:N \l__gpr_id_tl/floruit } { floruit-years } {
			\tl_set:Ne \l_tmpa_tl { \property_ref:ee { gpr/\tl_use:N \l__gpr_id_tl/floruit } { floruit-years } }
			\seq_set_split:NnV \l__gpr_floruit_years_seq {,} \l_tmpa_tl

			\tl_clear_new:N \l__formatted_gpr_floruit_tl
			\gpr_format_floruit:N \l__formatted_gpr_floruit_tl
			\tl_put_right:Ne \l__gpr_life_events_tl {,\tl_use:N \l__formatted_gpr_floruit_tl }
		}

		% format name
		\tl_clear_new:N \l__gpr_styled_name_tl
		\gpr_style_name:N \l__gpr_styled_name_tl

		% placeholders for id and names
		\cs_set:Npe \gprID { \tl_use:N \l__gpr_id_tl }
		\cs_set:Npe \gprStyledName { \tl_use:N \l__gpr_styled_name_tl }
		\cs_set:Npe \gprFullName { \tl_use:N \l__gpr_fullname_tl }
		\cs_set:Npe \gprGivenName { \tl_use:N \l__gpr_givenname_tl }
		\cs_set:Npe \gprPatronymic { \tl_use:N \l__gpr_patronymic_tl }
		\cs_set:Npe \gprSurname { \tl_use:N \l__gpr_surname_tl }
		\cs_set:Npe \gprByname { \tl_use:N \l__gpr_byname_tl }

		% set hyperref target just before typesetting
		\MakeLinkTarget*{ gpr/\tl_use:N \l__gpr_id_tl/target }

		% begin typesetting
		\tl_use:N \l__gpr_begin_profile_tl

		% record properties for id
		\property_record:ee { gpr/\tl_use:N \l__gpr_id_tl/target } { page, target }

		\gpr_add_to_indexes:VN \l__gpr_id_tl \c_true_bool

		\bool_if:NT \l__gpr_autoheader_bool {
			\tl_use:N \l__gpr_header_format_tl
			\tl_use:N \l__gpr_after_header_tl
		}

		% typeset life events
		\tl_if_empty:NF \l__gpr_life_events_tl {
			\gpr_set_genealogytree_keys:V \l__gpr_life_events_tl
			\gtrPrintDatabase

			\tl_use:N \l__gpr_after_life_events_tl
		}
}{
		% end typesetting
		\tl_use:N \l__gpr_end_profile_tl

		% save floruit years including updates from \gprYear
		\seq_if_empty:NF \l__gpr_floruit_years_seq {
			\property_record:ee { gpr/\tl_use:N \l__gpr_id_tl/floruit } { floruit-years }
		}
	\group_end:
}

\NewDocumentEnvironment { gprProfile } { O{} m O{} } {
	\begin{gprProfile*}{fullname={#2}, #1}[#3]
}{
	\end{gprProfile*}
}

\NewDocumentCommand { \gprRef } { s o m o } {
	\group_begin:
		\gpr_name_handler:n { #3 }
		\IfValueTF{#2}{
			\gpr_typeset_reference:nVnN {#2} \l__gpr_fullname_tl {#4} #1
		}{
			\prop_get:NnNTF \g__gpr_name_to_id_prop {#3} \l_tmpa_tl
			{
				\tl_if_eq:NnTF \l_tmpa_tl {_AMBIGUOUS_}
				{
					\msg_warning:nnee { genealogy-profiles } { ambiguous-reference } { \tl_use:N \l__gpr_fullname_tl } {\the\inputlineno}
					\gpr__unknown_reference_handler:Vn \l__gpr_fullname_tl { ambiguous }
				}
				{
					\gpr_typeset_reference:VVnN \l_tmpa_tl \l__gpr_fullname_tl {#4} #1
				}
			}
			{
				\msg_warning:nne { genealogy-profiles } { unknown-reference-name } { #3 }
					\gpr__unknown_reference_handler:Vn \l__gpr_fullname_tl { unknown~name }
			}
		}
	\group_end:
}

\NewDocumentCommand { \gprYear } { m } {
	% record floruit year
	\seq_if_in:NnF \l__gpr_floruit_years_seq {#1} {
		\seq_gput_right:Nn \l__gpr_floruit_years_seq {#1}
	}
	#1
}